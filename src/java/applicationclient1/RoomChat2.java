/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package applicationclient1;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.jms.Topic;
import javax.jms.TopicConnection;
import javax.jms.TopicConnectionFactory;
import javax.jms.TopicPublisher;
import javax.jms.TopicSession;
import javax.jms.TopicSubscriber;
import javax.naming.InitialContext;

/**
 *
 * @author Nong
 */
public class RoomChat2 extends javax.swing.JFrame implements MessageListener{

    /**
     * Creates new form RoomChat
     */
    
    private TopicConnectionFactory connectionFactory;
    private TopicConnection connection;
    private TopicSession pubSession;
     private TopicSession subSession;
     private TopicSubscriber subscriber;
     private TopicPublisher publisher;
    
    public RoomChat2() {
        initComponents();
        this.setTitle("hihiB");
        try {
            InitialContext context = new InitialContext();
            connectionFactory = (TopicConnectionFactory) context.lookup("jms/__defaultConnectionFactory");
            connection = connectionFactory.createTopicConnection();
            pubSession = connection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
             subSession = connection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
             Topic topic = (Topic) context.lookup("AuP");
             publisher = pubSession.createPublisher(topic);
             subscriber = subSession.createSubscriber(topic);
             subscriber.setMessageListener(this);
             set(pubSession, subSession, connection, subscriber, publisher);
             connection.start();
             
             jTextField1.addActionListener((e) -> {
                 String text = jTextField1.getText().trim();
                 if (!text.equalsIgnoreCase("exit")) {
                     DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
                     String time = dateFormat.format(new Date());
                      sendMes(getTitle() + " [" + time + "]: " + text);
                     jTextField1.setText("");
                 } else {
                     close();
                     System.exit(0);
                 }
             });
             
             jButton1.addActionListener((e) -> {
                 String text = jTextField1.getText().trim();
                 if (!text.equalsIgnoreCase("exit")) {
                     DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
                     String time = dateFormat.format(new Date());
                     sendMes(getTitle() + " [" + time + "]: " + text);
                      jTextField1.setText("");
                 } else {
                     close();
                     System.exit(0);
                 }
             });
        } catch (Exception e) {
        }
    }
    
    public void set(TopicSession pubSession, TopicSession subSession, TopicConnection connection, TopicSubscriber subscriber, TopicPublisher publisher) {
        this.pubSession = pubSession;
        this.subSession = subSession;
        this.connection = connection;
        this.subscriber = subscriber;
        this.publisher = publisher;
    }

    private void close() {
        try {
            connection.close();
        } catch (Exception e) {
        }
    }
    
    private void sendMes(String text) {
        try {
            TextMessage textM = pubSession.createTextMessage(text);
            publisher.publish(textM);
        } catch (Exception e) {
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setText("jTextField1");

        jButton1.setText("jButton1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomChat2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomChat2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomChat2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomChat2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomChat2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onMessage(Message message) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
            TextMessage message1 = (TextMessage) message;
            jTextArea1.append(message1.getText() + "\n");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
